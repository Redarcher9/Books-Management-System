{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/books": {
            "get": {
                "description": "Retrieve all books with pagination. If the provided offset or limit is less than 0, default values of limit = 10 and offset = 0 will be applied automatically.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get all books with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/definitions/domain.Book"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Create a new book with title, author, and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Create a new book",
                "parameters": [
                    {
                        "description": "Book data to create",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.BookRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book Created Successfully"
                    },
                    "400": {
                        "description": "Validation Error"
                    },
                    "409": {
                        "description": "Book with provided Title and Author already exists"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "Fetch detailed information about a book using its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Get a book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Book"
                        }
                    },
                    "400": {
                        "description": "Invalid ID format"
                    },
                    "404": {
                        "description": "Book not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "description": "Update an existing book by its ID with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "Update a book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book data to update",
                        "name": "book",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.BookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book updated successfully"
                    },
                    "400": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "Book to update not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "delete": {
                "description": "Delete a book by its ID",
                "tags": [
                    "books"
                ],
                "summary": "Delete a book by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book Deleted Successfully"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/helloworld": {
            "get": {
                "description": "do ping",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "example"
                ],
                "summary": "ping example",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Book": {
            "type": "object",
            "required": [
                "author",
                "title",
                "year"
            ],
            "properties": {
                "author": {
                    "type": "string",
                    "maxLength": 255
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "title": {
                    "type": "string",
                    "maxLength": 255
                },
                "year": {
                    "type": "integer",
                    "example": 1957
                }
            }
        },
        "domain.BookRequest": {
            "type": "object",
            "required": [
                "author",
                "title",
                "year"
            ],
            "properties": {
                "author": {
                    "type": "string",
                    "maxLength": 255
                },
                "title": {
                    "type": "string",
                    "maxLength": 255
                },
                "year": {
                    "type": "integer",
                    "example": 1957
                }
            }
        }
    }
}